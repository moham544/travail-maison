class Monome:
    def _init_(self, coef, deg, suivant=None):
        # donnée :
        self.coef = coef # de type float
        self.deg = deg # de type int
        # une reference vers le prochain monome (par défault None)
        self.suivant = suivant # de type Monome
        
    def getCoef(self):
        return self.coef
    def setCoef(self, val):
        self.coef = val
        return self
    
    def getDeg(self):
        return self.deg
    def setDeg(self, val):
        self.deg = val
        return self
    
    def getSuivant(self):
        return self.suivant
    def setSuivant(self, m):
        self.suivant = m
        return self
    
    def _str_(self):
        return str(self.getCoef()) + 'X^' + str(self.getDeg())
    
    def _mul_(self, m):
        return Monome(self.getCoef() * m.getCoef(), self.getDeg()+m.getDeg())
    
    def _add_(self, m):
        assert self.getDeg() == m.getDeg()
        return Monome(self.getCoef() + m.getCoef(), self.getDeg())
    
    def _sub_(self, m):
        assert self.getDeg()==m.getDeg()
        return Monome(self.getCoef()-m.getCoef(), self.getDeg())
    
    def _truediv_(self, m):
        assert  self.getDeg()==m.getDeg()
        return Monome(self.getCoef()/m.getCoef())* Monome(self.getDeg()-m.getDeg())
    @staticmethod
    def deriver(m):
        return Monome(m.getCoef()*m.getDeg(),m.getDeg()-1)
        
    
    @staticmethod
    def primitive(m):
        return Monome(m.getCoef()/m.getDeg(),m.getDeg()+1)
